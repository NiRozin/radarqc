# -*- coding: utf-8 -*-

import numpy as np
from matplotlib import colors

colorsDBZH = np.array([(  0, 219, 219), (  0, 186, 186), (  0, 153, 153),
                       (  0, 117, 120), ( 94,  94, 255), ( 71,  71, 255),
                       ( 46,  46, 255), ( 23,  23, 255), (  0, 250,   0),
                       (  0, 206,   0), (  0, 178,   0), (  0, 150,   0),
                       (  0, 120,   0), (  0,  84,   0), (  0,  56,   0), 
                       (250, 242,   0), (245, 250,   0), (245, 209,   0),                    
                       (242, 194,   0), (237, 170,   0), (232, 140,   0),
                       (230, 122,   0), (250,   0,   0), (222,   0,   0),
                       (199,   0,   0), (184,   0,   0), (166,   0,   0),
                       (255, 158, 255), (255, 115, 247), (224,  33, 224),
                       (204,  33, 234), (176,  41, 219), (161,  43, 214),
                       (145,  43, 204)])/255.

#colorsRHOHV = np.array([(0.64, 0.69, 0.65), (0.64, 0.69, 0.65), (0.64, 0.69, 0.65),
                       #(0.64, 0.69, 0.65), (0.64, 0.69, 0.65), (0.37, 0.37, 1.00),
                       #(0.28, 0.28, 1.00), (0.18, 0.18, 1.00), (0.09, 0.09, 1.00),
                       #(0.00, 0.47, 0.00), (0.00, 0.59, 0.00), (0.00, 0.69, 0.00),
                       #(0.00, 0.98, 0.00), (0.98, 0.95, 0.00), (0.96, 0.88, 0.00),
                       #(0.95, 0.76, 0.00), (0.92, 0.70, 0.00), (0.91, 0.55, 0.00),
                       #(0.90, 0.48, 0.00), (0.87, 0.00, 0.00), (0.78, 0.00, 0.00),
                       #(0.72, 0.00, 0.00), (0.65, 0.00, 0.00), (0.57, 0.17, 0.80),
                       #(0.80, 0.13, 0.92), (0.88, 0.13, 0.88), (1.00, 0.45, 0.97),
                       #(1.00, 0.62, 1.00), (0.95,0.94,0.97)])

#colorsPHIDP = np.array([(0.00, 0.00, 0.00), (0.00, 0.86, 0.86), (0.00, 0.73, 0.73),
                       #(0.37, 0.37, 1.00), (0.09, 0.09, 1.00), (0.00, 0.98, 0.00),
                       #(0.00, 0.81, 0.00), (0.00, 0.47, 0.00), (0.00, 0.33, 0.00),
                       #(0.00, 0.22, 0.00), (0.98, 0.95, 0.00), (0.96, 0.88, 0.00),
                       #(0.91, 0.55, 0.00), (0.87, 0.45, 0.00), (0.87, 0.00, 0.00),
                       #(0.78, 0.00, 0.00), (0.65, 0.00, 0.00), (0.58, 0.00, 0.00),
                       #(0.93, 0.96, 0.95)])

#colorsVELH = np.array([(204, 255, 204), (178, 255, 178), (127, 255, 127),
                      #(  0, 250,   0), (  0, 206,   0), (  0, 178,   0),
                      #(  0, 150,   0), (  0, 120,   0), (  0,  84,   0),
                      #(  0,  56,   0), (204, 204, 204), (127,   0,   0),
                      #(148,   0,   0), (166,   0,   0), (184,   0,   0),
                      #(199,   0,   0), (222,   0,   0), (250,   0,   0),
                      #(255, 153, 153), (255, 191, 191), (255, 217, 217)])/255.

#colorsWIDTHH = np.array([(0.09, 0.09, 1.00), (0.18, 0.18, 1.00), (0.28, 0.28, 1.00),
                        #(0.37, 0.37, 1.00), (0.42, 0.42, 1.00), (0.00, 0.47, 0.00),
                        #(0.00, 0.59, 0.00), (0.00, 0.70, 0.00), (0.00, 0.81, 0.00),
                        #(0.00, 0.98, 0.00), (0.60, 1.00, 0.60), (0.80, 0.90, 0.00),
                        #(0.98, 0.95, 0.00), (0.96, 0.88, 0.00), (0.96, 0.82, 0.00),
                        #(0.95, 0.76, 0.00), (0.91, 0.55, 0.00), (0.90, 0.48, 0.00),
                        #(1.00, 0.00, 0.00), (0.95, 0.00, 0.00), (0.87, 0.00, 0.00)])

#colorsZDR = np.array([(0.20, 0.20, 0.20), (0.60, 0.60, 0.60), (0.80, 0.80, 0.80),
                     #(0.90, 0.90, 0.90), (0.37, 0.37, 1.00), (0.18, 0.18, 1.00),
                     #(0.09, 0.09, 1.00), (0.00, 0.59, 0.00), (0.00, 0.81, 0.00),
                     #(0.00, 0.98, 0.00), (0.60, 1.00, 0.60), (0.98, 0.95, 0.00),
                     #(0.96, 0.82, 0.00), (0.95, 0.76, 0.00), (0.91, 0.55, 0.00),
                     #(0.90, 0.48, 0.00), (0.98, 0.00, 0.00), (0.87, 0.00, 0.00),
                     #(0.88, 0.13, 0.88), (1.00, 0.45, 0.97), (1.00, 0.60, 0.96)])

#colorsNCPH = np.array([(0.05, 0.05, 0.05), (0.37, 0.37, 1.00), (0.27, 0.07, 1.00),
                      #(0.09, 0.09, 1.00), (0.00, 0.60, 0.60), (0.00, 0.73, 0.73),
                      #(0.00, 0.86, 0.86), (0.00, 0.98, 0.00), (0.00, 0.81, 0.00),
                      #(0.00, 0.70, 0.00), (0.00, 0.59, 0.00), (0.98, 0.95, 0.00),
                      #(0.96, 0.88, 0.00), (0.96, 0.82, 0.00), (0.95, 0.76, 0.00), 
                      #(0.91, 0.55, 0.00), (0.90, 0.48, 0.00), (0.98, 0.00, 0.00), 
                      #(0.87, 0.00, 0.00), (0.78, 0.00, 0.00), (0.72, 0.00, 0.00)])

#colorsKDP = np.array([(0.80, 0.80, 0.80), (0.70, 0.70, 0.70), (0.60, 0.60, 0.60),
                     #(0.20, 0.20, 0.20), (0.40, 0.00, 0.00), (0.50, 0.00, 0.00),
                     #(0.58, 0.00, 0.00), (0.65, 0.00, 0.00), (0.72, 0.00, 0.00),
                     #(0.98, 0.00, 0.00), (1.00, 0.60, 0.60), (0.00, 0.86, 0.86),
                     #(0.00, 0.73, 0.73), (0.00, 0.60, 0.60), (0.00, 0.98, 0.00),
                     #(0.00, 0.81, 0.00), (0.00, 0.70, 0.00), (0.98, 0.95, 0.00),
                     #(0.95, 0.76, 0.00), (0.91, 0.55, 0.00), (0.90, 0.48, 0.00),
                     #(1.00, 0.45, 0.97), (0.88, 0.13, 0.88), (0.80, 0.13, 0.92),
                     #(0.69, 0.16, 0.86), (0.63, 0.17, 0.84), (0.57, 0.17, 0.80)])

#colorsLDR = np.array([(0.09, 0.09, 1.00), (0.18, 0.18, 1.00), (0.28, 0.28, 1.00),
                     #(0.37, 0.37, 1.00), (0.42, 0.42, 1.00), (0.00, 0.46, 0.47),
                     #(0.00, 0.60, 0.60), (0.00, 0.73, 0.73), (0.00, 0.86, 0.86),
                     #(0.98, 0.95, 0.00), (0.96, 0.88, 0.00), (0.96, 0.82, 0.00),  
                     #(0.91, 0.55, 0.00), (0.90, 0.48, 0.00), (0.98, 0.00, 0.00), 
                     #(0.87, 0.00, 0.00), (0.78, 0.00, 0.00), (0.05, 0.05, 0.05)])

#colorsCDR = np.array([(0.00, 0.73, 0.73), (0.00, 0.86, 0.86), (0.00, 0.81, 0.00),
                     #(0.00, 0.98, 0.00), (0.40, 1.00, 0.40), (0.60, 1.00, 0.60),
                     #(0.80, 0.90, 0.00), (0.98, 0.95, 0.00), (0.96, 0.88, 0.00),
                     #(0.96, 0.82, 0.00), (0.95, 0.76, 0.00), (0.91, 0.55, 0.00), 
                     #(0.90, 0.48, 0.00), (0.95, 0.00, 0.00), (0.87, 0.00, 0.00)])

#colorsHMC = np.array([(0.20, 0.20, 0.20), (0.70, 0.70, 0.70), (0.87, 0.70, 0.70),
                     #(0.00, 0.86, 0.86), (0.09, 0.09, 1.00), (0.00, 0.90, 0.00),
                     #(0.00, 0.35, 0.00), (0.96, 0.88, 0.00), (0.91, 0.55, 0.00),
                     #(0.87, 0.00, 0.00), (0.57, 0.17, 0.80)])

colorsRR = np.array([(0.00, 0.33, 0.00), (0.00, 0.47, 0.00), (0.00, 0.59, 0.00),
                     (0.00, 0.70, 0.00), (0.00, 0.81, 0.00), (0.00, 0.98, 0.00),
                     (0.98, 0.95, 0.00), (0.96, 0.82, 0.00), (0.95, 0.76, 0.00),
                     (0.91, 0.60, 0.00), (0.90, 0.45, 0.00), (0.90, 0.30, 0.00),
                     (0.90, 0.10, 0.00), (0.70, 0.10, 0.00), (0.50, 0.10, 0.00)])

stepDBZH  = np.arange(-24,73,3)
#stepVELH   = np.arange(-40,41,4)
#stepWIDTH = np.arange(21)
#stepNCP   = np.arange(0,1.05,0.05)
#stepZDR   = np.arange(-5,5.5,0.5)
#stepPHIDP = np.arange(0,380,20)
#stepLDR   = (-40,-38,-36,-34,-32,-30,-28,-26,-25,-24,-23,-22,-20,-18,-16,-14,-12,-10)
#stepCDR   = (-30,-28,-26,-24,-22,-20,-18,-16,-14,-12,-10,-8,-5,-2,0)
#stepSNR   = (0.00,0.03,0.06,0.09,0.12,0.16,0.19,0.22,0.25,0.28,0.31,0.34,0.38,0.41,0.44,0.47,0.50,0.53,0.56,0.59,0.62,0.66,0.69,0.72,0.75,0.78,0.81,0.84,0.88,0.91,0.94,0.97,1.00)
#stepRHOHV = (0.00,0.10,0.20,0.30,0.40,0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.92,0.94,0.96,0.98,0.990,0.991,0.992,0.993,0.994,0.995,0.996,0.997,0.998,0.999,1.00)
#stepKDP   = (-0.50,-0.44,-0.38,-0.33,-0.27,-0.21,-0.15,-0.10,-0.04,0.02,0.08,0.13,0.19,0.25,0.31,0.37,0.42,0.48,0.54,0.60,0.65,0.71,0.77,0.83,0.88,0.94,1.00)
stepRR    = [0,1,3,5,7,10,15,20,25,30,40,50,75,100,200,300]
#stepHMC   = ('GC','SC','BI','DS','WS','IC','GR','BD','RA','HR','HA')

palette = {
'DBZH'  :[colorsDBZH,   stepDBZH,       'dBZ', 'Equivalent Reflectivity Factor'],
'DBZV'  :[colorsDBZH,   stepDBZH,       'dBZ', 'Equivalent Reflectivity Factor'],
#'UH'    :[colorsDBZH,   stepDBZH,       'dBZ', 'Unfiltered Reflectivity Factor'],
#'UV'    :[colorsDBZH,   stepDBZH,       'dBZ', 'Unfiltered Reflectivity Factor'],
#'CZ'    :[colorsDBZH,   stepDBZH,       'dBZ', 'Quality Control Reflectivity'],
#'CRHC'  :[colorsDBZH,   stepDBZH,       'dBZ', 'Right-Hand Circular Reflectivity'],
#'LHC'   :[colorsDBZH,   stepDBZH,       'dBZ', 'Uncorrected Left-Hand Circular Reflectivity'],
#'CLHC'  :[colorsDBZH,   stepDBZH,       'dBZ', 'Left-Hand Circular Reflectivity'],
#'RHC'   :[colorsDBZH,   stepDBZH,       'dBZ', 'Uncorrected Right-Hand Circular Reflectivity'],
#'VELH'  :[colorsVELH,   stepVELH,       'm/s', 'Radial Velocity'],
#'VELV'  :[colorsVELH,   stepVELH,       'm/s', 'Radial Velocity'],
#'WIDTHH':[colorsWIDTHH, stepWIDTH,      'm/s', 'Doppler Spectrum Width'],
#'WIDTHV':[colorsWIDTHH, stepWIDTH,      'm/s', 'Doppler Spectrum Width'],
#'ZDR'   :[colorsZDR,    stepZDR,        'dBZ', 'Log Differential Reflectivity'],
#'LDR'   :[colorsLDR,    stepLDR,         'dB', 'Linear Depolarization Ratio'],
#'CDR'   :[colorsCDR,    stepCDR,         'dB', 'Uncorrected Log Circular Depolarization Ratio'],
#'CCDR'  :[colorsCDR,    stepCDR,         'dB', 'Log Circular Depolarization Ratio'],
#'SNRHC' :[colorsDBZH,   stepSNR,         'dB', 'Signal-to-Noise Ratio Co-Polar'],
#'SNRVC' :[colorsDBZH,   stepSNR,         'dB', 'Signal-to-Noise Ratio Co-Polar'],
#'CCORH' :[colorsDBZH,   stepDBZH,        'dB', 'Clutter Correction'],
#'CCORV' :[colorsDBZH,   stepDBZH,        'dB', 'Clutter Correction'],
#'SNRH'  :[colorsDBZH,   stepSNR,         'dB', 'Signal-to-Noise Ratio'],
#'SNRV'  :[colorsDBZH,   stepSNR,         'dB', 'Signal-to-Noise Ratio'],
#'RHOHV' :[colorsRHOHV,  stepRHOHV,         '', 'Cross Correlation Ratio'],
#'PHIDP' :[colorsPHIDP,  stepPHIDP,  'degrees', 'Differential Phase'],
#'NCPH'  :[colorsNCPH,   stepNCP,           '', 'Normalized Coherent Power'],
#'NCPV'  :[colorsNCPH,   stepNCP,           '', 'Normalized Coherent Power'],
#'KDP'   :[colorsKDP,    stepKDP, 'degrees/km', 'Specific Differential Phase'],
#'HMC'   :[colorsHMC,    stepHMC,           '', 'Hydrometeor Classification'],
#'RR'    :[colorsRR,     stepRR,       'mm/hr', 'Rain Rate'],
#'ZE'    :[colorsDBZH,   stepDBZH,       'dBZ', 'Edited Reflectivity'],
#'DR'    :[colorsDBZH,   stepDBZH,       'dBZ', 'Differential Reflectivity'],
#'VE'    :[colorsVELH,   stepDBZH,       'm/s', 'Edited Velocity'],
'prec'   :[colorsRR,     stepRR,          'mm', u'Precipitação']
}

under_over = {
'prec': ['white', [0,.17,.17]],
}


class ColorMap:

    def __init__(self):
        pass

    def getPPIColormap(self, cores):
        my_cmap = colors.ListedColormap(cores, 'my_colormap', len(cores))
        my_cmap.set_bad('1', alpha=0)
        my_cmap.set_over('1', alpha=0)
        my_cmap.set_under('1', alpha=0)
        return my_cmap
    
    def get_info(self, moment):
        cmap, clevs, unit, title = palette[moment]
        cmap = self.getPPIColormap(cmap)
        return cmap, clevs, unit, title
        
    def get_under_over(self, var):
        return under_over[var]
        
